<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="aee799e7-209c-43fb-843f-04d98aef57f6" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/planner-product">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/planner-product">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="planner-product" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="planner-product" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Record" />
        <option value="Class" />
        <option value="Interface" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/planner-jobs/src/main/java/org/example/plannerjobs/service/JobService.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2ivNuOa1WF6Qe3k2MCHLCBqPHg8" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.MinIOStorageWithSpring/compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.planner-jobs.app: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.planner-jobs.postgres: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.planner-jobs.spring-boot-app: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.planner-jobs: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor&quot;: &quot;Run&quot;,
    &quot;Maven.planner-microservice [clean].executor&quot;: &quot;Run&quot;,
    &quot;Maven.planner-microservice [compile].executor&quot;: &quot;Run&quot;,
    &quot;Maven.planner-microservice [install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.planner-product [clean,compile,install].executor&quot;: &quot;Run&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;Spring Boot.PlannerConfigApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.PlannerGatewayApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.PlannerJobsApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.PlannerProductApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.PlannerServerApplication.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-21&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/jvmpe/Desktop/microservice/planner-microservice/planner-jobs&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;Errors&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\jvmpe\Desktop\microservice\planner-microservice\planner-jobs" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn install" />
      <command value="mvn compile" />
      <command value="mvn clean" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.MinIOStorageWithSpring/compose.yaml: Compose Deployment">
    <configuration name="PlannerConfigApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="planner-config" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannerconfig.PlannerConfigApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlannerGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="planner-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannergateway.PlannerGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlannerJobsApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="planner-jobs" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannerjobs.PlannerJobsApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlannerOrderApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="planner-order" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannerorder.PlannerOrderApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlannerProductApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="planner-product" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannerproduct.PlannerProductApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlannerServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="planner-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.plannerserver.PlannerServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MinIOStorageWithSpring/compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="../../BlogInfo/MinIOStorageWithSpring/compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="planner-jobs: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="planner-jobs/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="planner-jobs.app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="app" />
            </list>
          </option>
          <option name="sourceFilePath" value="planner-jobs/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="planner-jobs.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="planner-jobs/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="planner-jobs.spring-boot-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="spring-boot-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="planner-jobs/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.MinIOStorageWithSpring/compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.planner-jobs: Compose Deployment" />
        <item itemvalue="Docker.planner-jobs.app: Compose Deployment" />
        <item itemvalue="Docker.planner-jobs.spring-boot-app: Compose Deployment" />
        <item itemvalue="Docker.planner-jobs.postgres: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="aee799e7-209c-43fb-843f-04d98aef57f6" name="Changes" comment="" />
      <created>1720367314095</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1720367314095</updated>
      <workItem from="1720367315189" duration="2137000" />
      <workItem from="1721072075650" duration="7505000" />
      <workItem from="1721762717382" duration="441000" />
      <workItem from="1721768099186" duration="15959000" />
      <workItem from="1723062890713" duration="7169000" />
      <workItem from="1723935362583" duration="715000" />
      <workItem from="1724189901133" duration="803000" />
      <workItem from="1724194903804" duration="8247000" />
      <workItem from="1724325076535" duration="4000" />
      <workItem from="1724524591401" duration="2607000" />
      <workItem from="1724538036971" duration="12182000" />
      <workItem from="1724978013018" duration="2927000" />
      <workItem from="1725484518399" duration="5005000" />
      <workItem from="1725982949270" duration="540000" />
      <workItem from="1726360486440" duration="5220000" />
      <workItem from="1726615106923" duration="2843000" />
      <workItem from="1726658487711" duration="20312000" />
      <workItem from="1726870238517" duration="2029000" />
      <workItem from="1727026328802" duration="52000" />
      <workItem from="1727737361976" duration="595000" />
      <workItem from="1727910519217" duration="27000" />
      <workItem from="1732761021139" duration="2566000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>